# the purpose of this r file is to extract and merge data (from 4 different sets)
# from this merged data, this file will extract specific data values for the mean
# and standard deviation. Then this file will show the averages of that data in a
# tidy data set. I discussed with a classmate the steps needed to solve this problem.
# He gave me specific help on certain steps towards the end.

setwd("C:/Users/C16Meagan.Whitaker/Documents/Spring 2015/Math 378/getdata-projectfiles-UCI HAR Dataset/")

#extract the test data then the train data
x_test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("UCI HAR Dataset/test/Y_test.txt")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("UCI HAR Dataset/train/Y_train.txt")

#combine data
combined_x<-rbind(x_train,x_test)
combined_y<-rbind(y_train,y_test)
combined <- cbind(combined_x,combined_y)

#get col names then transpose it
col_names<-read.table("UCI HAR Dataset/features.txt")
colnames(combined) <- t(col_names[,2])

#read subject values for test then train, combine
sub_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
sub_train <- read.table("UCI HAR Dataset/train/subject_train.txt")
sub_total <-rbind(sub_train,sub_test)

#activity lables
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")

#row numbers with mean and sd
std_row<-grep("std()",colnames(combined))
mean_row<-grep("mean()",colnames(combined))
std_cols<-combined[,std_row]
mean_cols<-combined[,mean_row]

#removes mean freq and combines
meanFreq_cols<-grep("meanFreq",colnames(mean_cols))
mean_cols<-mean_cols[meanFreq_cols]
data<-cbind(sub_total,combined_y,mean_cols,std_cols)

#tidy set up
tidydata<-c()
subjects<-c(1:30)

#let's rename stuff!
colnames(data)[1]<-"Subjects"
colnames(data)[2]<-"Activities"

#this cycles through everyone and activity to add it the tidyframe
#only finds the mean for specific subject/data point. My classmate helped me figure out the code for this part.
for(i in 1:30){
  for(j in 1:6){
    false<-subset(data,Subjects==subjects[i]&Activities==activity_labels[j,1])
    vector<-apply(false,2,mean)
    new_vector<-cbind(subjects[i],activity_labels[j,2],t(vector))
    tidydata<-rbind(tidydata,new_vector)
  }
}

#renaming in tidy data now!
colnames(tidydata)[1]="Subject"
colnames(tidydata)[2]="Activity"

#makes tidy names easier to read/replace variable names. My classmate assisted me in this coding as well.
names(tidydata)<-gsub("At","Time",names(tidydata))
names(tidydata)<-gsub("Acc","Accelerometer",names(tidydata))
names(tidydata)<-gsub("^f","Frequency",names(tidydata))
names(tidydata)<-gsub("Gyro","Gyroscope",names(tidydata))
names(tidydata)<-gsub("Mag","Magnitude",names(tidydata))
names(tidydata)<-gsub("BodyBody","Body",names(tidydata))

#read to text file
write.table(tidydata,"TidyDataWAverages.txt",row.name=FALSE)




